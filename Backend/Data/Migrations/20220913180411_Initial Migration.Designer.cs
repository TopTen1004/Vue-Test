// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tepe.Brt.Data;

#nullable disable

namespace Tepe.Brt.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220913180411_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tepe.Brt.Data.Entities.PatientEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.RecoItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatImgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RecommendationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecommendationID");

                    b.ToTable("RecoItems");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.RecommendationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bridge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Missing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TeethImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientID");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.RecoItemEntity", b =>
                {
                    b.HasOne("Tepe.Brt.Data.Entities.RecommendationEntity", "Recommendation")
                        .WithMany("RecoItems")
                        .HasForeignKey("RecommendationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recommendation");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.RecommendationEntity", b =>
                {
                    b.HasOne("Tepe.Brt.Data.Entities.PatientEntity", "Patient")
                        .WithMany("Recommendations")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.PatientEntity", b =>
                {
                    b.Navigation("Recommendations");
                });

            modelBuilder.Entity("Tepe.Brt.Data.Entities.RecommendationEntity", b =>
                {
                    b.Navigation("RecoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
